image: "python:3.8"
# different stages in the pipeline
stages:
  - build
  - test
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  untracked: true
  key: "test"
  paths:
    - .cache/pip
    - venv/


include:
  - template: Code-Quality.gitlab-ci.yml

Build:
  stage: build
  script:
    - pip install elementpath
    - pip install loguru
    - python main.py


before_script:
  - python --version
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt

pep8:
  stage: test
  artifacts:
    paths:
      - .cache/pip
      - venv
  script:
    - flake8 --exclude='.git,venv,*migrations*,static/lib' .

code_quality:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
    SP_VERSION: 0.85.18
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/ci-cd/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

Test:
  stage: test
  script:
    - python main_test.py dev
    - cd results
    - if grep -q "Failed" result.log; then  grep "Failed" result.log; exit 1;  else echo "OK";  grep "Passed" result.log; exit 0; fi